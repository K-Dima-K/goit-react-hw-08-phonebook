{"version":3,"file":"static/js/933.cd2f9e4b.chunk.js","mappings":"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","sources":["modules/LoginForm/initialState.js","modules/LoginForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/modules/LoginForm/LoginForm.module.css?2400","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email:',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password:',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginForm_title__5Xj78\"};","import * as React from 'react';\nimport { useState } from 'react';\n\nimport Button from 'shared/components/Button/Button';\n\nimport TextField from 'shared/components/TextField/TextField';\n\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport css from './LoginForm.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleSearch = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  const { email, password } = state;\n\n  return (\n    <>\n      <h2 className={css.title}>Login to your account</h2>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <TextField\n          value={email}\n          handleChange={handleSearch}\n          {...fields.email}\n        />\n        <TextField\n          value={password}\n          handleChange={handleSearch}\n          {...fields.password}\n        />\n        <Button type=\"submit\">Login</Button>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/auth-operations';\n\nimport LoginForm from 'modules/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <>\n      <LoginForm onSubmit={handleLogin} />\n    </>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__wi4ey\"};","import css from './Button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={css.btn}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"label\":\"TextField_label__PQj1k\",\"input\":\"TextField_input__Oi20a\"};","import { useMemo } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport css from './TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id} className={css.label}>\n        {label}\n      </label>\n      <input id={id} onChange={handleChange} {...props} className={css.input} />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["email","password","type","name","required","label","placeholder","onSubmit","useState","initialState","state","setState","handleSearch","e","target","value","prevState","className","css","preventDefault","TextField","handleChange","fields","Button","dispatch","useDispatch","data","login","children","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange"],"sourceRoot":""}